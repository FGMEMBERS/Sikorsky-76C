<?xml version="1.0"?>
<PropertyList>

    <path>spz700.ac</path>

    <animation>
        <type>select</type>
        <object-name>SPZ.hdg.on</object-name>
        <condition>
            <equals>
                <property>autopilot/locks/heading</property>
                <value>dg-heading-hold</value>
            </equals>
        </condition>
    </animation>

    <animation>
        <type>select</type>
        <object-name>SPZ.vs.on</object-name>
        <condition>
            <equals>
                <property>autopilot/locks/altitude</property>
                <value>VS</value>
            </equals>
        </condition>
    </animation>

    <animation>
        <type>select</type>
        <object-name>SPZ.alt.on</object-name>
        <condition>
            <equals>
                <property>autopilot/locks/altitude</property>
                <value>altitude-hold</value>
            </equals>
        </condition>
    </animation>

    <animation>
        <type>select</type>
        <object-name>SPZ.nav.arm</object-name>
        <condition>
			<property>instrumentation/nav/in-range</property>
        </condition>
    </animation>

    <animation>
        <type>select</type>
        <object-name>SPZ.nav.cap</object-name>
        <condition>
            <equals>
                <property>autopilot/locks/heading</property>
                <value>nav1-hold</value>
            </equals>
        </condition>
    </animation>

    <!-- old ILS knob is now GPS knob -->
    <animation>
        <type>select</type>
        <object-name>SPZ.ils.arm</object-name>
        <condition>
            <property>autopilot/route-manager/active</property>
        </condition>
    </animation>

    <animation>
        <type>select</type>
        <object-name>SPZ.ils.cap</object-name>
        <condition>
            <equals>
                <property>autopilot/locks/heading</property>
                <value>true-heading-hold</value>
            </equals>
        </condition>
    </animation>

    <animation>
        <type>select</type>
        <object-name>SPZ.decel.arm</object-name>
        <condition>
            <equals>
                <property>autopilot/locks/altitude-armed</property>
                <value>DECEL</value>
            </equals>
        </condition>
    </animation>

    <animation>
        <type>select</type>
        <object-name>SPZ.decel.cap</object-name>
        <condition>
            <equals>
                <property>autopilot/locks/altitude</property>
                <value>DECEL</value>
            </equals>
        </condition>
    </animation>

    <animation>
        <type>select</type>
        <object-name>SPZ.apr.arm</object-name>
        <condition>
			<property>instrumentation/nav/has-gs</property>
        </condition>
    </animation>

    <animation>
        <type>select</type>
        <object-name>SPZ.apr.cap</object-name>
        <condition>
            <equals>
                <property>autopilot/locks/altitude</property>
                <value>gs1-hold</value>
            </equals>
        </condition>
    </animation>

    <animation>
        <type>select</type>
        <object-name>SPZ.ias.on</object-name>
        <condition>
            <equals>
                <property>autopilot/locks/speed</property>
                <value>speed-with-throttle</value>
            </equals>
        </condition>
    </animation>

    <animation>
        <type>select</type>
        <object-name>SPZ.asel.arm</object-name>
        <condition>
            <equals>
                <property>autopilot/locks/altitude-armed</property>
                <value>ASEL</value>
            </equals>
        </condition>
    </animation>

    <animation>
        <type>select</type>
        <object-name>SPZ.asel.cap</object-name>
        <condition>
            <equals>
                <property>autopilot/locks/altitude</property>
                <value>ASEL</value>
            </equals>
        </condition>
    </animation>

    <animation>
        <type>select</type>
        <object-name>SPZ.bc.arm</object-name>
        <condition>
            <equals>
                <property>autopilot/locks/heading-armed</property>
                <value>BC</value>
            </equals>
        </condition>
    </animation>

    <animation>
        <type>select</type>
        <object-name>SPZ.bc.cap</object-name>
        <condition>
            <equals>
                <property>instrumentation/nav/back-course-btn</property>
                <value>true</value>
            </equals>
        </condition>
    </animation>

    <animation>
        <type>select</type>
        <object-name>SPZ.sby.on</object-name>
        <condition>
            <property>autopilot/locks/standby</property>
        </condition>
    </animation>

    <animation>
        <type>select</type>
        <object-name>SPZ.ga.on</object-name>
        <condition>
            <property>/controls/flight/auto-coordination</property>
        </condition>
    </animation>

<!--    Hotspots  -->

    <animation>
        <type>pick</type>
        <object-name>SPZ.hdg</object-name>
        <action>
            <button>0</button>
            <repeatable>false</repeatable>
            <binding>
  		  	    <command>nasal</command>
  		        <script><![CDATA[
  		  		  if(getprop("/autopilot/locks/heading") == ""){
  		  	  		setprop("/autopilot/locks/heading", "dg-heading-hold");		  
  		  		  }else{
  		  	  		setprop("/autopilot/locks/heading", "");		  
  		  		  }
  		        ]]></script>
                <!--command>nasal</command>
                <script>s76c.FlDr.set_lateral_mode("HDG");</script-->
            </binding>
        </action>
    </animation>

    <!--animation>
        <type>pick</type>
        <object-name>SPZ.vs</object-name>
        <action>
            <button>0</button>
            <repeatable>false</repeatable>
            <binding>
                <command>nasal</command>
                <script>s76c.FlDr.set_vertical_mode("VS");</script>
            </binding>
        </action>
    </animation-->

    <animation>
        <type>pick</type>
        <object-name>SPZ.alt</object-name>
        <action>
            <button>0</button>
            <repeatable>false</repeatable>
            <binding>
                <!--command>nasal</command>
                <script>s76c.FlDr.set_vertical_mode("ALT");</script-->
		  	  <command>nasal</command>
		        <script><![CDATA[
		  		  if(getprop("/autopilot/locks/altitude") == ""){
		  	  		setprop("/autopilot/settings/target-altitude-ft", getprop("/position/altitude-ft"));
		  	  		setprop("/autopilot/locks/altitude", "altitude-hold");	  
		  		  }else{
		  	  		setprop("/autopilot/locks/altitude", "");	  
		  		  }
		        ]]></script>
            </binding>
        </action>
    </animation>

    <animation>
        <type>pick</type>
        <object-name>SPZ.nav</object-name>
        <action>
            <button>0</button>
            <repeatable>false</repeatable>
            <binding>
                <!--command>nasal</command>
                <script>s76c.FlDr.set_lateral_arm_mode("NAV");</script-->
  		  	  <command>nasal</command>
  		        <script><![CDATA[
  		  		  if(getprop("/autopilot/locks/heading") != "nav1-hold"){
  		  	  		setprop("/autopilot/locks/heading", "nav1-hold");	  
  		  		  }else{
  		  	  		setprop("/autopilot/locks/heading", "");	  
  		  		  }
  		        ]]></script>
            </binding>
        </action>
    </animation>

    <animation>
        <type>pick</type>
        <object-name>SPZ.ils</object-name>
        <action>
            <button>0</button>
            <repeatable>false</repeatable>
            <binding>
                <!--command>nasal</command>
                <script>s76c.FlDr.set_lateral_arm_mode("LOC");</script-->
    		  	  <command>nasal</command>
    		        <script><![CDATA[
    		  		  if(getprop("/autopilot/locks/heading") != "true-heading-hold"){
    		  	  		setprop("/autopilot/locks/heading", "true-heading-hold");	  
    		  		  }else{
    		  	  		setprop("/autopilot/locks/heading", "");	  
    		  		  }
    		        ]]></script>
            </binding>
        </action>
    </animation>

    <!--animation>
        <type>pick</type>
        <object-name>SPZ.decel</object-name>
        <action>
            <button>0</button>
            <repeatable>false</repeatable>
            <binding>
                <command>nasal</command>
                <script>s76c.FlDr.set_vertical_arm_mode("DECEL");</script>
            </binding>
        </action>
    </animation-->

    <animation>
        <type>pick</type>
        <object-name>SPZ.apr</object-name>
        <action>
            <button>0</button>
            <repeatable>false</repeatable>
            <binding>
                <!--command>nasal</command>
                <script>s76c.FlDr.set_lateral_arm_mode("LOC");
                s76c.FlDr.set_vertical_arm_mode("GS");</script-->
  		  	  <command>nasal</command>
  		        <script><![CDATA[
  		  		  if(getprop("/autopilot/locks/altitude") != "gs1-hold"){
  		  	  		setprop("/autopilot/locks/altitude", "gs1-hold");	  
  		  		  }else{
  		  	  		setprop("/autopilot/locks/altitude", "");	  
  		  		  }
  		        ]]></script>
            </binding>
        </action>
    </animation>

    <animation>
        <type>pick</type>
        <object-name>SPZ.ias</object-name>
        <action>
            <button>0</button>
            <repeatable>false</repeatable>
            <binding>
                <!--command>nasal</command>
                <script>s76c.FlDr.set_vertical_arm_mode("IAS");</script-->
    		  	  <command>nasal</command>
    		        <script><![CDATA[
    		  		  if(getprop("/autopilot/locks/altitude")){
	    		  		  if(!getprop("/autopilot/locks/speed")){
						    var actualSpeed = getprop("/instrumentation/airspeed-indicator/indicated-speed-kt") or 0;
						    setprop("/autopilot/settings/target-speed-kt", actualSpeed );
	    		  	  		setprop("/autopilot/locks/speed", "speed-with-throttle");	  
	    		  		  }else{
	    		  	  		setprop("/autopilot/locks/speed", "");	  
	    		  		  }	  
    		  		  }else{
    		  	  		setprop("/autopilot/locks/speed", "");	  
    		  		  }
    		        ]]></script>
            </binding>
        </action>
    </animation>

    <!--animation>
        <type>pick</type>
        <object-name>SPZ.asel</object-name>
        <action>
            <button>0</button>
            <repeatable>false</repeatable>
            <binding>
                <command>nasal</command>
                <script>s76c.FlDr.set_vertical_arm_mode("ASEL");</script>
            </binding>
        </action>
    </animation>

    <animation>
        <type>pick</type>
        <object-name>SPZ.bc</object-name>
        <action>
            <button>0</button>
            <repeatable>false</repeatable>
            <binding>
                <command>nasal</command>
                <script>s76c.FlDr.set_lateral_arm_mode("BC");</script>
            </binding>
        </action>
    </animation>

    <animation>
        <type>pick</type>
        <object-name>SPZ.sby</object-name>
        <action>
            <button>0</button>
            <repeatable>false</repeatable>
            <binding>
                <command>property-toggle</command>
                <property>autopilot/locks/standby</property>
            </binding>
        </action>
    </animation-->

    <!--animation>
        <type>pick</type>
        <object-name>SPZ.ga</object-name>
        <action>
            <button>0</button>
            <repeatable>false</repeatable>
            <binding>
                <command>property-toggle</command>
                <property>/controls/flight/auto-coordination</property>
            </binding>
        </action>
    </animation-->

</PropertyList>